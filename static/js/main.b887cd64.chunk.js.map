{"version":3,"sources":["components/firebaseConfig.ts","config.ts","hooks/useAuth.tsx","hooks/useCheckCorrectedUser.tsx","components/Loading.tsx","images/bglogo.png","components/CustomAlert.tsx","components/SocialAuth.tsx","pages/Auth/Auth.tsx","components/QuizName.tsx","components/QuizSelect.tsx","components/QuizSlider.tsx","components/QuizLastSlide.tsx","components/Quizzes.ts","components/QuizProgress.tsx","components/ResultConfig.ts","components/ResultTitle.tsx","components/ResultButton.tsx","pages/Result/Result.tsx","pages/Quiz/Quiz.tsx","pages/Waiting/Waiting.tsx","pages/About/About.tsx","components/Nav.tsx","components/Router.tsx","components/Theme.ts","components/App.tsx","index.tsx"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","useAuth","useState","currentUser","setCurrenUser","useEffect","onAuthStateChanged","user","useCheckCorrectedUser","isCorrectedUser","setIsCorrectedUser","email","collection","where","get","then","snapshot","forEach","exists","catch","error","console","log","Loading","isLoading","setIsLoading","Loader","useRef","setInterval","current","remove","ref","className","CustomAlert","msg","setMsg","React","open","Transition","Slide","state","setState","onClose","Snackbar","TransitionComponent","anchorOrigin","vertical","horizontal","Alert","severity","name","SocialAuth","errorMsg","setErrorMsg","onClickSocial","event","a","target","parentNode","id","provider","GoogleAuthProvider","FacebookAuthProvider","GithubAuthProvider","signInWithPopup","message","Button","onClick","icon","faGoogle","size","faFacebook","faGithub","Auth","setEmail","password","setPassword","isSignUp","setIsSignUp","onChange","type","value","onSubmit","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","src","bglogo","alt","TextField","label","prev","QuizName","index","submitValue","submitAnswer","setCurrentQuiz","color","Checkbox","checked","PanoramaFishEyeOutlined","checkedIcon","PanoramaFishEye","ClearOutlined","Clear","QuizSelect","quiz","answer","setAnswer","isCurrent","myAnswer","setMyAnswer","QuizSlider","maxQuizNum","currentQuizNum","leftButton","rightButton","classList","add","IconButton","aria-label","component","KeyboardArrowLeft","KeyboardArrowRight","QuizLastSlide","quizzes","setIsSubmit","map","quizs","QUIZ_MAX","length","getRandomNum","floatNum","Math","random","floor","QuizProgress","setCurrentQuizNum","progresses","setProgresses","tempProgress","i","tempElement","push","parseInt","progress","saveCorrectUserEmail","uid","undefined","now","Date","date","correctedAt","toUTCString","ResultTitle","isCorrect","header","setHeader","info","setInfo","ResultButton","href","variant","Result","answers","isSubmit","setIsCorrect","grading","CheckCircleOutline","ErrorOutline","Quiz","setQuizzes","setAnswers","currentQuiz","tempQuizzes","n","randomNums","randomNum","includes","num","getRandomQuiz","Waiting","About","Nav","history","useHistory","to","signOut","AppRouter","TransitionRouter","withRouter","location","TransitionGroup","CSSTransition","classNames","timeout","exact","path","pathname","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","App","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b887cd64.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nimport * as config from \"config\";\n\nconst firebaseConfig: object = {\n    apiKey: config.FB_API_KEY,\n    authDomain: config.FB_AUTH_DOMAIN,\n    projectId: config.FB_PROJECT_ID,\n    storageBucket: config.FB_STORAGE_BUCKET,\n    messagingSenderId: config.FB_MESSAGING_SENDER_ID,\n    appId: config.FB_APP_ID,\n}\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\n","export const FB_API_KEY: string = \"AIzaSyA_HEuSJuwkDUUmW-mZzM9loXOu9ruSPbI\";\nexport const FB_AUTH_DOMAIN: string = \"like-amazing-lion.firebaseapp.com\";\nexport const FB_PROJECT_ID: string = \"like-amazing-lion\";\nexport const FB_STORAGE_BUCKET: string = \"like-amazing-lion.appspot.com\";\nexport const FB_MESSAGING_SENDER_ID: string = \"477672594501\";\nexport const FB_APP_ID: string = \"1:477672594501:web:9319859d668254e9c5172c\";\n","import React, { useEffect, useState } from \"react\";\nimport { authService } from \"components/firebaseConfig\";\n\nconst useAuth = () => {\n    const [currentUser, setCurrenUser] = useState<firebase.default.User | null>(\n        authService.currentUser\n    );\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            setCurrenUser(user);\n        });\n    }, []);\n\n    return currentUser;\n};\n\nexport default useAuth;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"components/firebaseConfig\";\nimport { authService } from \"components/firebaseConfig\";\n\nconst useCheckCorrectedUser = (currentUser: firebase.default.User | null) => {\n    const [isCorrectedUser, setIsCorrectedUser] = useState<boolean>(false);\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                const { email } = user;\n\n                const correctedUsers = dbService.collection(\"correctedUser\");\n                const query = correctedUsers.where(\"email\", \"==\", email);\n\n                const isExist = query\n                    .get()\n                    .then((snapshot) => {\n                        snapshot.forEach(({ exists }) => {\n                            setIsCorrectedUser(exists);\n                        });\n                    })\n                    .catch((error) => {\n                        console.log(\"Error getting documents: \", error);\n                    });\n            }\n        });\n    }, []);\n\n    return isCorrectedUser;\n};\n\nexport default useCheckCorrectedUser;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nconst Loading = () => {\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const Loader = useRef<any>();\n\n    useEffect(() => {\n        setInterval(() => {\n            setIsLoading(true);\n        }, 1500);\n\n        setInterval(()=>{\n            Loader.current.remove();\n        }, 2350)\n    }, []);\n\n    return (\n        \n        <div ref={Loader} className={`loading ${isLoading ? \"loading__end\" : \"\"}`}>\n            <div className=\"loading__circle\"></div>\n        </div>\n    );\n};\n\nexport default Loading;\n","export default __webpack_public_path__ + \"static/media/bglogo.a6dd963f.png\";","import React, { useEffect, useState } from \"react\";\nimport { Snackbar, Slide } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nimport { TransitionProps } from \"@material-ui/core/transitions\";\n\ninterface CustomAlertProps {\n    msg: string;\n    setMsg: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst CustomAlert = ({ msg, setMsg }: CustomAlertProps) => {\n    const [state, setState] = React.useState<{\n        open: boolean;\n        Transition: React.ComponentType<\n            TransitionProps & { children?: React.ReactElement<any, any> }\n        >;\n    }>({\n        open: false,\n        Transition: Slide,\n    });\n\n    const vertical: any = \"bottom\";\n    const horizontal: any = \"right\";\n\n    useEffect(() => {\n        setState({\n            ...state,\n            open: msg !== \"\",\n        });\n    }, [msg]);\n\n    const onClose = () => {\n        setState({\n            ...state,\n            open: false,\n        });\n\n        setMsg(\"\");\n    };\n\n    return (\n        <Snackbar\n            open={state.open}\n            onClose={onClose}\n            TransitionComponent={state.Transition}\n            key={state.Transition.name}\n            anchorOrigin={{ vertical, horizontal }}\n        >\n            <Alert onClose={onClose} severity=\"warning\">\n                {msg}\n            </Alert>\n        </Snackbar>\n    );\n};\n\nexport default CustomAlert;\n","import React, { useState } from \"react\";\nimport { firebaseInstance, authService } from \"components/firebaseConfig\";\nimport { Button } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faGithub,\n    faGoogle,\n    faFacebook,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport CustomAlert from \"components/CustomAlert\";\n\nconst SocialAuth = () => {\n    const [errorMsg, setErrorMsg] = useState<string>(\"\");\n\n    const onClickSocial = async (\n        event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n    ) => {\n        const { parentNode } = event.target as HTMLButtonElement;\n        const { id } = parentNode as HTMLButtonElement;\n        let provider: any;\n\n        try {\n            if (id === \"google\") {\n                provider = new firebaseInstance.auth.GoogleAuthProvider();\n            } else if (id === \"facebook\") {\n                provider = new firebaseInstance.auth.FacebookAuthProvider();\n            } else if (id === \"github\") {\n                provider = new firebaseInstance.auth.GithubAuthProvider();\n            }\n\n            await authService.signInWithPopup(provider);\n        } catch ({ message }) {\n            setErrorMsg(message);\n        }\n    };\n\n    return (\n        <div className=\"social\">\n            <Button\n                onClick={onClickSocial}\n                id=\"google\"\n                className=\"social__button\"\n            >\n                <FontAwesomeIcon\n                    icon={faGoogle}\n                    size=\"4x\"\n                    className=\"social__icon\"\n                />\n            </Button>\n            <Button\n                onClick={onClickSocial}\n                id=\"facebook\"\n                className=\"social__button\"\n            >\n                <FontAwesomeIcon\n                    icon={faFacebook}\n                    size=\"4x\"\n                    className=\"social__icon\"\n                />\n            </Button>\n            <Button\n                onClick={onClickSocial}\n                id=\"github\"\n                className=\"social__button\"\n            >\n                <FontAwesomeIcon\n                    icon={faGithub}\n                    size=\"4x\"\n                    className=\"social__icon\"\n                />\n            </Button>\n\n            <CustomAlert msg={errorMsg} setMsg={setErrorMsg} />\n        </div>\n    );\n};\n\nexport default SocialAuth;\n","import React, { useState } from \"react\";\nimport { authService } from \"components/firebaseConfig\";\nimport { Button, TextField } from \"@material-ui/core\";\n\nimport \"pages/Auth/Auth.scss\";\nimport bglogo from \"images/bglogo.png\";\nimport CustomAlert from \"components/CustomAlert\";\nimport SocialAuth from \"components/SocialAuth\";\n\nconst Auth = () => {\n    const [email, setEmail] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const [isSignUp, setIsSignUp] = useState<boolean>(true);\n    const [errorMsg, setErrorMsg] = useState<string>(\"\");\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const {\n            target: { type, value },\n        } = event;\n\n        if (type === \"email\") {\n            setEmail(value);\n        } else if (type === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        try {\n            if (isSignUp) {\n                await authService.createUserWithEmailAndPassword(\n                    email,\n                    password\n                );\n            } else {\n                await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            const { message } = error;\n            setErrorMsg(message);\n        }\n    };\n\n    const toggleIsSignUp = () => {\n        setIsSignUp((prev) => !prev);\n    };\n\n    return (\n        <div className=\"auth\">\n            <div className=\"background\">\n                <img\n                    className=\"background__logo\"\n                    src={bglogo}\n                    alt=\"bg_logo\"\n                ></img>\n            </div>\n            <div className=\"form\">\n                <form className=\"form__form\" onSubmit={onSubmit}>\n                    <TextField\n                        id=\"standard-basic\"\n                        label=\"E-mail\"\n                        type=\"email\"\n                        value={email}\n                        onChange={onChange}\n                        className=\"form__input\"\n                    ></TextField>\n\n                    <TextField\n                        id=\"standard-basic\"\n                        label=\"Password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={onChange}\n                        className=\"form__input\"\n                    ></TextField>\n\n                    <Button type=\"submit\" className=\"form__submit\">\n                        {isSignUp ? \"회원가입\" : \"로그인\"}\n                    </Button>\n\n                    <span className=\"form__span\">\n                        {isSignUp? \"이미 가입을 하셨나요?\" : \"이미 계정이 있으신가요?\"}\n                        <span onClick={toggleIsSignUp}>\n                            {isSignUp ? \"로그인 하기\" : \"회원가입 하기\"}\n                        </span>\n                    </span>\n                </form>\n\n                <SocialAuth />\n\n                <CustomAlert msg={errorMsg} setMsg={setErrorMsg}></CustomAlert>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;\n","import React from \"react\";\nimport { Button, Checkbox } from \"@material-ui/core\";\nimport {\n    Clear,\n    ClearOutlined,\n    PanoramaFishEye,\n    PanoramaFishEyeOutlined,\n} from \"@material-ui/icons\";\n\ninterface QuizNameProps {\n    name: string;\n    submitAnswer?: boolean;\n    submitValue?: boolean;\n    index: number;\n    setCurrentQuiz?: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst QuizName = ({\n    name,\n    index,\n    submitValue,\n    submitAnswer,\n    setCurrentQuiz,\n}: QuizNameProps) => {\n    const trueIcon = () => (\n        <Checkbox\n            checked\n            className=\"quiz__yes\"\n            icon={<PanoramaFishEyeOutlined />}\n            checkedIcon={<PanoramaFishEye />}\n        />\n    );\n\n    const falseIcon = () => (\n        <Checkbox\n            checked\n            className=\"quiz__no\"\n            icon={<ClearOutlined />}\n            checkedIcon={<Clear />}\n        />\n    );\n\n    const onClick = (\n        event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n    ) => {\n        if (submitAnswer && setCurrentQuiz) {\n            setCurrentQuiz(index);\n        }\n    };\n\n    return (\n        <Button className=\"quiz__name\" color=\"secondary\" onClick={onClick}>\n            <span className={`name__span ${submitAnswer && \"name__check\" }`}>\n                {name}\n                {submitAnswer ? (submitValue ? trueIcon() : falseIcon()) : \"\"}\n            </span>\n        </Button>\n    );\n};\n\nexport default QuizName;\n","import React, { useState } from \"react\";\nimport { Checkbox } from \"@material-ui/core\";\nimport {\n    Clear,\n    ClearOutlined,\n    PanoramaFishEye,\n    PanoramaFishEyeOutlined,\n} from \"@material-ui/icons\";\n\nimport QuizName from \"components/QuizName\";\nimport { QuizInterface } from \"components/Quizzes\";\n\nexport interface QuizSelectInterface {\n    id: number;\n    isCurrent: boolean;\n    quiz?: QuizInterface;\n    answer: boolean[];\n    setAnswer?: React.Dispatch<React.SetStateAction<boolean[]>>;\n}\n\nconst QuizSelect = ({\n    id,\n    quiz,\n    answer,\n    setAnswer,\n    isCurrent,\n}: QuizSelectInterface) => {\n    const [myAnswer, setMyAnswer] = useState<boolean>(true);\n\n    const onChange = () => {\n        answer[id] = !answer[id];\n        setAnswer?.(answer);\n\n        setMyAnswer(answer[id]);\n    };\n\n    return (\n        <div className={`quiz__select ${isCurrent && \"quiz__select__showing\"}`}>\n            <div className=\"select__button\">\n                <Checkbox\n                    onChange={onChange}\n                    checked={!myAnswer}\n                    className=\"quiz__no\"\n                    icon={<ClearOutlined />}\n                    checkedIcon={<Clear />}\n                />\n\n                <Checkbox\n                    onChange={onChange}\n                    checked={myAnswer}\n                    className=\"quiz__yes\"\n                    icon={<PanoramaFishEyeOutlined />}\n                    checkedIcon={<PanoramaFishEye />}\n                />\n            </div>\n\n            <QuizName name={quiz?.name as string} index={id}/>\n        </div>\n    );\n};\n\nexport default QuizSelect;\n","import React, { useRef, useEffect } from \"react\";\n\nimport { IconButton } from \"@material-ui/core\";\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\n\ninterface QuizSliderProps {\n    setCurrentQuiz: React.Dispatch<React.SetStateAction<number>>;\n    maxQuizNum: number;\n    currentQuizNum: number;\n}\n\nconst QuizSlider = ({\n    setCurrentQuiz,\n    maxQuizNum,\n    currentQuizNum,\n}: QuizSliderProps) => {\n    const leftButton = useRef<any>(null);\n    const rightButton = useRef<any>(null);\n\n    useEffect(() => {\n        leftButton.current.classList.remove(\"slider__hide\");\n        rightButton.current.classList.remove(\"slider__hide\");\n\n        if (currentQuizNum === 0) {\n            leftButton.current.classList.add(\"slider__hide\");\n        } else if (currentQuizNum === maxQuizNum) {\n            rightButton.current.classList.add(\"slider__hide\");\n        }\n    }, [currentQuizNum]);\n\n    const onClickLeft = () => {\n        if (currentQuizNum > 0) {\n            setCurrentQuiz((prev) => prev - 1);\n        }\n    };\n\n    const onClickRight = () => {\n        if (currentQuizNum < maxQuizNum) {\n            setCurrentQuiz((prev) => prev + 1);\n        }\n    };\n\n    return (\n        <div className=\"quiz__slider\">\n            <IconButton\n                ref={leftButton}\n                onClick={onClickLeft}\n                className={\"slider__btn slider__hide\"}\n                color=\"primary\"\n                aria-label=\"left\"\n                component=\"span\"\n            >\n                <KeyboardArrowLeft />\n            </IconButton>\n\n            <IconButton\n                ref={rightButton}\n                onClick={onClickRight}\n                className=\"slider__btn\"\n                color=\"primary\"\n                aria-label=\"right\"\n                component=\"span\"\n            >\n                <KeyboardArrowRight />\n            </IconButton>\n        </div>\n    );\n};\n\nexport default QuizSlider;\n","import React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nimport QuizName from \"components/QuizName\";\nimport { QuizSelectInterface } from \"components/QuizSelect\";\nimport { QuizInterface } from \"components/Quizzes\";\n\ninterface QuizLastSlidePros extends QuizSelectInterface {\n    quizzes: QuizInterface[] | null;\n    setCurrentQuiz: React.Dispatch<React.SetStateAction<number>>;\n    setIsSubmit: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst QuizLastSlide = ({\n    id,\n    isCurrent,\n    answer,\n    quizzes,\n    setCurrentQuiz,\n    setIsSubmit,\n}: QuizLastSlidePros) => {\n    const onSubmit = () => {\n        setIsSubmit(true);\n    };\n\n    return (\n        <div className={`quiz__select ${isCurrent && \"quiz__select__showing\"}`}>\n            {quizzes?.map((quiz, index) => (\n                <QuizName\n                    key={index}\n                    index={index}\n                    submitAnswer={true}\n                    name={`${quiz.name}`}\n                    submitValue={answer[index]}\n                    setCurrentQuiz={setCurrentQuiz}\n                />\n            ))}\n\n            <Button\n                onClick={onSubmit}\n                className=\"select__submit\"\n                color=\"primary\"\n            >\n                결과 확인하기\n            </Button>\n        </div>\n    );\n};\n\nexport default QuizLastSlide;\n","export interface QuizInterface {\n    name: string;\n    answer: boolean;\n}\n\nconst quizs: QuizInterface[] = [\n    { name: \"멋쟁이 사자처럼 1기는 서울대학교에서만 진행했다 ?\", answer: true },\n    { name: \"자소설닷컴은 멋쟁이 사자처럼으로 시작했다 ?\", answer: true },\n    { name: \"멋쟁이 사자처럼은 IT 전공자만 신청 가능하다 ?\", answer: false },\n    { name: \"정답은 X 입니다.3\", answer: false },\n    { name: \"정답은 X 입니다.4\", answer: false },\n    { name: \"정답은 X 입니다.5\", answer: false },\n    { name: \"정답은 X 입니다.6\", answer: false },\n    { name: \"정답은 X 입니다.7\", answer: false },\n];\n\nconst QUIZ_MAX: number = quizs.length;\n\nconst getRandomNum = () => {\n    const floatNum: number = Math.random() * QUIZ_MAX;\n    const intNum: number = Math.floor(floatNum);\n\n    return intNum;\n};\n\nexport const getRandomQuiz = (n: number) => {\n    const randomNums: number[] = [];\n\n    while (randomNums.length < n) {\n        const randomNum = getRandomNum();\n        if (!randomNums.includes(randomNum)) {\n            randomNums.push(randomNum);\n        }\n    }\n\n    const randomQuizs: object[] = randomNums.map((num) => {\n        return quizs[num];\n    });\n\n    return randomQuizs;\n};\n","import React, { useState, useEffect } from \"react\";\n\ninterface QuizProgressProps {\n    maxQuizNum: number;\n    currentQuizNum: number;\n    setCurrentQuizNum: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst QuizProgress = ({\n    maxQuizNum,\n    currentQuizNum,\n    setCurrentQuizNum,\n}: QuizProgressProps) => {\n    const [progresses, setProgresses] = useState<string[]>();\n\n    useEffect(() => {\n        const tempProgress: string[] = [];\n        for (let i = 0; i <= maxQuizNum; i++) {\n            const tempElement = `progress__element ${\n                i === currentQuizNum && \"progress__selected\"\n            }`;\n            tempProgress.push(tempElement);\n        }\n        setProgresses(tempProgress);\n    }, [maxQuizNum, currentQuizNum]);\n\n    const onClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        const { id } = event.target as HTMLDivElement;\n        setCurrentQuizNum(parseInt(id));\n    };\n\n    return (\n        <div className=\"quiz__progress\">\n            <div className=\"progress__box\">\n                {progresses?.map((progress, index) => {\n                    return (\n                        <div\n                            className={progress}\n                            key={index}\n                            id={`${index}`}\n                            onClick={onClick}\n                        ></div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default QuizProgress;\n","import { QuizInterface } from \"components/Quizzes\";\nimport { dbService } from \"components/firebaseConfig\";\n\nexport interface ResultProps {\n    quizzes: QuizInterface[] | null;\n    answers: boolean[];\n    isSubmit?: boolean;\n    currentUser?: firebase.default.User | null;\n}\n\nexport interface ResultElementProps {\n    isCorrect: boolean;\n}\n\nexport const saveCorrectUserEmail = async (\n    currentUser: firebase.default.User | null | undefined\n) => {\n    const { email, uid } = currentUser as firebase.default.User;\n\n    if (email !== null && email !== undefined) {\n        const now = Date.now();\n        const date = new Date(now);\n\n        await dbService.collection(\"correctedUser\").add({\n            correctedAt: date.toUTCString(),\n            email,\n            uid,\n        });\n    }\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { ResultElementProps } from \"components/ResultConfig\";\n\nconst ResultTitle = ({ isCorrect }: ResultElementProps) => {\n    const [header, setHeader] = useState<string>(\"\");\n    const [info, setInfo] = useState<string>(\"\");\n\n    const CORRECT_HEADER_MSG = \"정답입니다 !\";\n    const CORRECT_INFO_MSG =\n        \"이벤트 당첨자에게는 2월 99일 회원가입에 사용하셨던 이메일을 통해 연락드리겠습니다 !\";\n    const WRONG_HEADER_MSG = \"아쉽지만 틀렸습니다\";\n    const WRONG_INFO_MSG = \"하단 버튼을 이용해 다시 도전 해보세요 !!\";\n\n    useEffect(() => {\n        const tempHeader = isCorrect ? CORRECT_HEADER_MSG : WRONG_HEADER_MSG;\n        setHeader(tempHeader);\n\n        const tempInfo = isCorrect ? CORRECT_INFO_MSG : WRONG_INFO_MSG;\n        setInfo(tempInfo);\n    }, [isCorrect]);\n\n    return (\n        <div className=\"result__title\">\n            <span className=\"title__header\">{header}</span>\n            <span className=\"title__info\">{info}</span>\n        </div>\n    );\n};\n\nexport default ResultTitle;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport { ResultElementProps } from \"components/ResultConfig\";\n\nconst ResultButton = ({ isCorrect }: ResultElementProps) => {\n    useEffect(() => {}, []);\n    return (\n        <div className=\"result__button\">\n            {isCorrect ? (\n                <a href=\"/\">\n                    <Button variant=\"contained\" color=\"primary\">\n                        만든 사람 보기\n                    </Button>\n                </a>\n            ) : (\n                <a href=\"/\">\n                    <Button variant=\"contained\" color=\"primary\">\n                        재도전\n                    </Button>\n                </a>\n            )}\n\n            <a\n                href=\"https://github.com/hyesungoh/Like_Amazing_Lion\"\n                target=\"_blank\"\n            >\n                <Button variant=\"contained\" color=\"primary\">\n                    소스 보기\n                </Button>\n            </a>\n        </div>\n    );\n};\n\nexport default ResultButton;\n","import React, { useState, useEffect } from \"react\";\nimport { CheckCircleOutline, ErrorOutline } from \"@material-ui/icons\";\n\nimport useAuth from \"hooks/useAuth\";\nimport { ResultProps, saveCorrectUserEmail } from \"components/ResultConfig\";\nimport ResultTitle from \"components/ResultTitle\";\nimport ResultButton from \"components/ResultButton\";\nimport \"pages/Result/Result.scss\";\n\nconst grading = ({ quizzes, answers, currentUser }: ResultProps) => {\n    for (let i = 0; i < answers.length; i++) {\n        if (quizzes?.[i].answer !== answers[i]) {\n            return false;\n        }\n    }\n    saveCorrectUserEmail(currentUser);\n    return true;\n};\n\nconst Result = ({ quizzes, answers, isSubmit }: ResultProps) => {\n    const [isCorrect, setIsCorrect] = useState<boolean>(false);\n    const currentUser = useAuth();\n\n    useEffect(() => {\n        setIsCorrect(grading({ quizzes, answers, currentUser }));\n    }, [isSubmit]);\n\n    return (\n        <div className={`result ${isSubmit ? \"\" : \"result__hide\"}`}>\n            <div className=\"result__overlay\"></div>\n            <div className=\"result__box\">\n                {isCorrect ? <CheckCircleOutline /> : <ErrorOutline />}\n\n                <ResultTitle isCorrect={isCorrect} />\n                <ResultButton isCorrect={isCorrect} />\n            </div>\n        </div>\n    );\n};\n\nexport default Result;\n","import React, { useState, useEffect } from \"react\";\n\nimport \"pages/Quiz/Quiz.scss\";\nimport QuizSelect from \"components/QuizSelect\";\nimport QuizSlider from \"components/QuizSlider\";\nimport QuizLastSlide from \"components/QuizLastSlide\";\nimport { getRandomQuiz, QuizInterface } from \"components/Quizzes\";\nimport QuizProgress from \"components/QuizProgress\";\nimport Result from \"pages/Result/Result\";\n\nconst Quiz = () => {\n    const GET_QUIZ_NUM: number = 3;\n    const [quizzes, setQuizzes] = useState<QuizInterface[] | null>(null);\n    const [answers, setAnswers] = useState([true, true, true]);\n    const [currentQuiz, setCurrentQuiz] = useState<number>(0);\n    const [isSubmit, setIsSubmit] = useState<boolean>(false);\n\n    useEffect(() => {\n        const tempQuizzes: QuizInterface[] = getRandomQuiz(\n            GET_QUIZ_NUM\n        ) as QuizInterface[];\n        setQuizzes(tempQuizzes);\n    }, []);\n\n    return (\n        <div className=\"quiz\">\n            <div className=\"quiz__box\">\n                {quizzes?.map((quiz: QuizInterface, index) => {\n                    return (\n                        <QuizSelect\n                            key={index}\n                            id={index}\n                            isCurrent={index === currentQuiz}\n                            quiz={quiz}\n                            answer={answers}\n                            setAnswer={setAnswers}\n                        />\n                    );\n                })}\n\n                <QuizLastSlide\n                    id={GET_QUIZ_NUM}\n                    isCurrent={currentQuiz === GET_QUIZ_NUM}\n                    answer={answers}\n                    quizzes={quizzes}\n                    setCurrentQuiz={setCurrentQuiz}\n                    setIsSubmit={setIsSubmit}\n                />\n\n                <QuizSlider\n                    setCurrentQuiz={setCurrentQuiz}\n                    maxQuizNum={GET_QUIZ_NUM}\n                    currentQuizNum={currentQuiz}\n                />\n            </div>\n\n            <QuizProgress\n                maxQuizNum={GET_QUIZ_NUM}\n                currentQuizNum={currentQuiz}\n                setCurrentQuizNum={setCurrentQuiz}\n            />\n\n            <Result quizzes={quizzes} answers={answers} isSubmit={isSubmit} />\n        </div>\n    );\n};\n\nexport default Quiz;\n","import React from \"react\";\nimport {Button} from \"@material-ui/core\";\nimport \"pages/Waiting/Waiting.scss\";\n\nconst Waiting = () => {\n    return (\n        <div className=\"waiting\">\n            <div className=\"background__waiting\"></div>\n            <div className=\"waiting__content\">\n                <div className=\"content__title\">\n                    <h1>축하합니다 !</h1>\n                    <p>3가지 문제를 모두 맞혔을 시, <br/>자동적으로 이벤트 응모가 완료된 것 입니다! 🎁</p>\n                    <p>당첨자 추첨은 <b>2월 99일</b>에 진행할 예정이며,<br/>당첨자에게는 이메일로 연락드리겠습니다. 😁</p>\n                </div>\n                <div className=\"content__other\">\n                    <a href=\"\"><Button color=\"primary\">멋쟁이사자처럼 자세히 알아보기</Button></a>\n                    <a href=\"\"><Button color=\"primary\">맛집 보기</Button></a>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Waiting;\n","import React from \"react\";\n\nimport \"pages/About/About.scss\";\n\nconst About = () => {\n    return (\n        <div className=\"about\">\n            <div className=\"about__info\">\n                <span>Hyesung Oh</span>\n                <span>LikeLion at SKHU 5th</span>\n            </div>\n\n            <div className=\"about__contect\">\n                <span>github.com/hyesungoh</span>\n                <span>haesungoh414@gmail.com</span>\n            </div>\n        </div>\n    );\n};\n\nexport default About;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { authService } from \"components/firebaseConfig\";\n\ninterface NavProps {\n    user: firebase.default.User | null;\n}\n\nconst Nav = ({ user }: NavProps) => {\n    const history = useHistory();\n\n    const onClickSignOut = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n\n    return (\n        <div className=\"nav\">\n            <Link to=\"/\">\n                <Button className=\"nav__logo\">놀라운 사자처럼</Button>\n            </Link>\n\n            <div className=\"nav__elements\">\n                <Link to=\"/about\">\n                    <Button className=\"nav__element\">만든 사람</Button>\n                </Link>\n                {user && (\n                    <Button className=\"nav__element\" onClick={onClickSignOut}>\n                        로그아웃\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport { HashRouter, Switch, Route, withRouter } from \"react-router-dom\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nimport useAuth from \"hooks/useAuth\";\nimport useCheckCorrectedUser from \"hooks/useCheckCorrectedUser\";\n\nimport Loading from \"components/Loading\";\nimport Auth from \"pages/Auth/Auth\";\nimport Quiz from \"pages/Quiz/Quiz\";\nimport Waiting from \"pages/Waiting/Waiting\";\nimport About from \"pages/About/About\";\nimport Nav from \"components/Nav\";\n\nconst AppRouter = () => {\n    const currentUser = useAuth();\n    const isCorrectedUser = useCheckCorrectedUser(currentUser);\n\n    const TransitionRouter = withRouter(({ location }) => (\n        <TransitionGroup className=\"app\">\n            <CSSTransition\n                key={location.pathname}\n                classNames=\"slide\"\n                timeout={1500}\n            >\n                <Switch location={location}>\n                    {currentUser === null ? (\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                    ) : isCorrectedUser ? (\n                        <Route exact path=\"/\">\n                            <Waiting />\n                        </Route>\n                    ) : (\n                        <Route exact path=\"/\">\n                            <Quiz />\n                        </Route>\n                    )}\n                    <Route path=\"/about\">\n                        <About />\n                    </Route>\n                </Switch>\n            </CSSTransition>\n        </TransitionGroup>\n    ));\n\n    return (\n        <HashRouter>\n            <Loading />\n            <Nav user={currentUser} />\n            <TransitionRouter />\n        </HashRouter>\n    );\n};\n\nexport default AppRouter;\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: \"#F79E1C\",\n            main: \"#F79E1C\",\n            dark: \"#F79E1C\",\n            contrastText: \"#F79E1C\",\n        },\n        secondary: {\n            light: \"#ffffff\",\n            main: \"#ffffff\",\n            dark: \"#ffffff\",\n            contrastText: \"#F79E1C\",\n        },\n    },\n});\n","import React from \"react\";\nimport AppRouter from \"components/Router\";\nimport { ThemeProvider } from \"@material-ui/core\";\n\nimport { theme } from \"components/Theme\";\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <AppRouter />\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nimport \"index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}